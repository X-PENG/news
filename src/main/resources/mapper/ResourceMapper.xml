<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.peng.news.mapper.ResourceMapper">

    <resultMap id="BaseResultMap" type="ResourceVO">
        <id property="id" column="id"/>
        <result property="url" column="url"/>
        <result property="name" column="name"/>
        <result property="path" column="path"/>
        <result property="component" column="component"/>
        <result property="iconCls" column="icon_cls"/>
        <result property="parentId" column="parent_id"/>
        <result property="enabled" column="enabled"/>
        <result property="description" column="description"/>
    </resultMap>

    <resultMap id="ResultMapWithChildren" type="ResourceVO" extends="BaseResultMap">
        <collection property="children" ofType="ResourceVO" column="id" select="getAllMenuByParentId"/>
    </resultMap>

    <resultMap id="ResultMapWithRoles" type="ResourceVO" extends="BaseResultMap">
<!--        <collection property="roles" ofType="RoleVO" column="id" select="com.peng.news.mapper.RoleMapper.getRolesByResourceId"/>-->
        <collection property="roles" ofType="RoleVO">
            <id property="id" column="role_id"/>
            <result property="nameEn" column="role_name"/>
        </collection>
    </resultMap>

    <resultMap id="ResultMapWithSecondChildren" type="ResourceVO" extends="BaseResultMap">
        <collection property="children" ofType="ResourceVO">
            <id property="id" column="id2"/>
            <result property="name" column="name2"/>
            <result property="path" column="path2"/>
            <result property="component" column="component2"/>
            <result property="iconCls" column="icon_cls2"/>
            <collection property="children" ofType="ResourceVO">
                <id property="id" column="id3"/>
                <result property="name" column="name3"/>
                <result property="path" column="path3"/>
                <result property="component" column="component3"/>
                <result property="iconCls" column="icon_cls3"/>
            </collection>
        </collection>
    </resultMap>

    <select id="getAllMenuByParentId" resultMap="ResultMapWithChildren">
        select * from resource
        where enabled = true
        <choose>
            <when test="parentId == null">
               and parent_id is null
            </when>
            <otherwise>
               and parent_id = #{parentId}
            </otherwise>
        </choose>
    </select>

    <select id="getAllResourceWithRoles" resultMap="ResultMapWithRoles">
        select t1.*,t3.id role_id,t3.name_en role_name
        from resource t1 left join role_resource t2 on t1.id=t2.resource_id left join role t3 on t2.role_id=t3.id
    </select>

    <select id="getMenusByUserId" resultMap="ResultMapWithSecondChildren">
        select DISTINCT t1.*,t2.id id2,t2.`name` `name2`,t2.path path2,t2.component component2,t2.icon_cls icon_cls2,t3.id id3,t3.`name` `name3`,t3.path path3,t3.component component3,t3.icon_cls icon_cls3
        from user_role p1 join role_resource_view t1 on t1.parent_id is NULL and t1.role_id=p1.role_id left join role_resource_view t2 on t2.role_id=t1.role_id and t1.id=t2.parent_id left join role_resource_view t3 on t3.role_id=t2.role_id and t2.id=t3.parent_id
        where p1.user_id=#{userId} and t1.enabled=1 and (t2.enabled=1 or t2.enabled is null) and (t3.enabled=1 or t3.enabled is null)
    </select>

    <select id="getMenusByUserId2" resultMap="BaseResultMap">
        SELECT DISTINCT t3.*
        from user_role t1 join role_resource t2 on t1.role_id=t2.role_id join resource t3 on t2.resource_id=t3.id
        where t1.user_id=#{userId} and t3.enabled=1
    </select>

</mapper>